:root {
  color-scheme: light dark;
  --bg:#0b132b; --panel:#101828; --card:#111827; --text:#e5e7eb; --muted:#94a3b8; --accent:#4cc9f0; --accent-2:#22d3ee;
  --border:#243244; --good:#22c55e; --warn:#f59e0b; --bad:#ef4444;
}
* { box-sizing: border-box; }
html, body, #root { height: 100%; }
body { margin: 0; font-family: Inter, ui-sans-serif, system-ui, Arial, sans-serif; background: radial-gradient(1200px 600px at 20% -10%, #0c1635, transparent 60%), var(--bg); color: var(--text); }

header, footer { padding: 14px 18px; background: linear-gradient(180deg, rgba(255,255,255,0.02), transparent); border-bottom: 1px solid rgba(255,255,255,0.06); }
h2 { margin: 0; letter-spacing: 0.2px; font-weight: 600; }

.page { max-width: 1200px; margin: 0 auto; }
.grid { display: grid; grid-template-columns: repeat(2, minmax(0, 1fr)); gap: 16px; padding: 16px; }

.tile {
  background: linear-gradient(180deg, rgba(255,255,255,0.03), rgba(255,255,255,0.01));
  border: 1px solid var(--border);
  border-radius: 14px;
  padding: 14px;
  box-shadow: 0 10px 30px rgba(0,0,0,0.25);
  transition: transform 200ms ease, box-shadow 200ms ease, border-color 200ms ease;
}
.tile:hover { border-color: rgba(37, 147, 180, 0.35); box-shadow: 0 16px 38px rgba(0,0,0,0.35); }

.tile h3 { margin-top: 0; font-weight: 600; letter-spacing: 0.3px; }
.row { display: flex; gap: 8px; margin: 8px 0; flex-wrap: wrap; }

input, select, .btn {
  padding: 10px 12px;
  border-radius: 10px;
  border: 1px solid #243244;
  background: #0f172a;
  color: var(--text);
  outline: none;
  transition: border-color 160ms ease, transform 160ms ease, background 160ms ease;
}
input:focus, select:focus { border-color: var(--accent-2); box-shadow: 0 0 0 4px rgba(34, 211, 238, 0.15); }
.btn { background: linear-gradient(180deg, #2563eb, #1e40af); border-color: #1e40af; cursor: pointer; position: relative; overflow: hidden; }
.btn:hover { transform: translateY(-1px); }
.btn:disabled { opacity: 0.55; cursor: not-allowed; }

.btn.ghost { background: transparent; border-color: #334155; }
.btn.ghost:hover { background: rgba(255,255,255,0.05); }

.list { list-style: none; padding: 0; margin: 8px 0; display: flex; flex-direction: column; gap: 8px; }
.list li {
  display: flex; align-items: center; justify-content: space-between; gap: 8px;
  background: rgba(255,255,255,0.02); border: 1px solid rgba(255,255,255,0.06);
  padding: 8px 10px; border-radius: 10px;
}

.check { display: inline-flex; align-items: center; gap: 8px; cursor: pointer; }
.check input { appearance: none; width: 18px; height: 18px; border-radius: 5px; border: 1px solid #334155; background: #0b1223; position: relative; }
.check input:checked { background: linear-gradient(180deg, #22c55e, #16a34a); border-color: #16a34a; }
.check input:checked::after { content: ""; position: absolute; inset: 3px; background: white; border-radius: 3px; }
.check.on span { opacity: 0.8; text-decoration: line-through; }

.chat { grid-column: span 2; }
.chat-box {
  height: 200px; overflow: auto; background: #0b1223; border-radius: 10px; padding: 10px; margin-bottom: 10px;
  border: 1px solid rgba(255,255,255,0.06);
  display: flex; flex-direction: column; gap: 8px;
}
.chat-box .user { align-self: flex-end; background: linear-gradient(180deg, #2563eb, #1e40af); padding: 8px 12px; border-radius: 12px; max-width: 75%; }
.chat-box .assistant { align-self: flex-start; background: #1f2937; padding: 8px 12px; border-radius: 12px; max-width: 75%; }

/* Ripple effect styles for elements with data-ripple */
.ripple {
  position: absolute;
  border-radius: 999px;
  transform: scale(0);
  background: radial-gradient(circle, rgba(255,255,255,0.35) 0%, rgba(255,255,255,0.25) 40%, transparent 60%);
  opacity: 0.9;
  pointer-events: none;
  filter: blur(0.2px);
  will-change: transform, opacity;
}
.ripple.run { transform: scale(1); transition: transform 450ms cubic-bezier(0.2, 0.8, 0.2, 1), opacity 300ms ease; }
.ripple.fade { opacity: 0; }

/* Page enter animation feel via subtle blur on grid */
.grid { animation: gridIn 520ms cubic-bezier(0.2, 0.8, 0.2, 1) both; }
@keyframes gridIn { from { opacity: 0; filter: blur(6px); transform: translateY(8px); } to { opacity: 1; filter: blur(0); transform: translateY(0); } }

@media (max-width: 800px) {
  .grid { grid-template-columns: 1fr; }
  .chat { grid-column: span 1; }
}

/* Big square tile layout */
.tree-tile { aspect-ratio: 1 / 1; display: flex; flex-direction: column; }
.tree-stage { flex: 1; display: grid; place-items: center; }
.tree-svg { width: 100%; height: 100%; }

/* Swaying animation for the whole tree group */
/* The origin is set near the ground where the trunk meets soil for realistic sway. */
.tree .sway {
  transform-origin: 100px 170px; /* pivot near trunk base */
  animation: windSway 4.8s ease-in-out infinite;
}

/* Light flutter for small leaves */
.tree .leaves circle {
  animation: leafFlutter 2.6s ease-in-out infinite;
  transform-origin: center;
}
.tree .leaves circle:nth-child(2) { animation-delay: 0.3s; }
.tree .leaves circle:nth-child(3) { animation-delay: 0.6s; }
.tree .leaves circle:nth-child(4) { animation-delay: 0.9s; }

/* On hover, intensify the sway slightly */
.tree-tile:hover .sway {
  animation-duration: 3.4s;
  filter: drop-shadow(0 2px 6px rgba(0,0,0,0.4));
}

/* Keyframes for gentle wind sway: small rotate + skew + translateX */
@keyframes windSway {
  0%   { transform: rotate(0deg) skewX(0deg) translateX(0px); }
  25%  { transform: rotate(1.8deg) skewX(1deg) translateX(1px); }
  50%  { transform: rotate(0deg) skewX(0deg) translateX(0px); }
  75%  { transform: rotate(-1.8deg) skewX(-1deg) translateX(-1px); }
  100% { transform: rotate(0deg) skewX(0deg) translateX(0px); }
}

/* Leaf flutter: slight drift and fade for a shimmering canopy */
@keyframes leafFlutter {
  0%   { transform: translateX(0px) translateY(0px) rotate(0deg); opacity: 0.9; }
  50%  { transform: translateX(2px) translateY(-1px) rotate(4deg); opacity: 0.7; }
  100% { transform: translateX(0px) translateY(0px) rotate(0deg); opacity: 0.9; }
}

/* Make the tile span full width on small screens; optional full-width on desktop */
@media (max-width: 800px) {
  .tree-tile { grid-column: span 2; }
}
/* If you want the big square spanning both columns on desktop, uncomment:
.tree-tile { grid-column: span 2; }
*/